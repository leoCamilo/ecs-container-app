Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: ${self:custom.stackName}-Cluster

  # The task definition. This is a simple metadata description of what
  # container to run, and what resource requirements it has.
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: ${self:custom.stageVars.ecs.exampleService.serviceName}
      Memory: ${self:custom.stageVars.ecs.exampleService.memory}
      Cpu: ${self:custom.stageVars.ecs.exampleService.cpu}
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      # TaskRoleArn:
      #   Fn::If:
      #     - 'HasCustomRole'
      #     - !Ref 'Role'
      #     - !Ref "AWS::NoValue"
      ContainerDefinitions:
        - Name: ${self:custom.stageVars.ecs.exampleService.serviceName}
          Image: ${self:custom.stageVars.ecs.exampleService.imageUrl}
          Memory: ${self:custom.stageVars.ecs.exampleService.memory}
          Cpu: ${self:custom.stageVars.ecs.exampleService.cpu}
          PortMappings:
            - ContainerPort: ${self:custom.stageVars.ecs.exampleService.port}

  # The service. The service is a resource which allows you to run multiple
  # copies of a type of task, and gather up their logs and metrics, as well
  # as monitor the number of running tasks and replace any that have crashed
  Service:
    Type: AWS::ECS::Service
    DependsOn: LoadBalancerRule
    Properties:
      ServiceName: ${self:custom.stageVars.ecs.exampleService.serviceName}
      Cluster: !Ref ECSCluster
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 75
      DesiredCount: ${self:custom.stageVars.ecs.exampleService.desiredCount}
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED # DISABLED
          SecurityGroups:
            - !Ref FargateContainerSecurityGroup
          Subnets:
            - ${self:custom.stageVars.network.subnet1}
            - ${self:custom.stageVars.network.subnet2}
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        - ContainerName: ${self:custom.stageVars.ecs.exampleService.serviceName}
          ContainerPort: ${self:custom.stageVars.ecs.exampleService.port}
          TargetGroupArn: !Ref TargetGroup
